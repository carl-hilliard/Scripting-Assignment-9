#!/bin/bash

## PROBLEM 3: Create an array for numbers 1 to 50.




# Step 1 of Problem 3: Use a for loop and create an array 
declare -a arr
for (( i=1; i<51; i++ ))
do
	arr[i]=$i
done

#Print the array to make sure it was properly filled
echo "The array of numbers from 1 to 50"
echo "${arr[*]}"





## PROBLEM 4: Using function/method, find the prime numbers from 1 to 50. Using 
## function/method, find summation of the prime numbers. 

# Write a function to determine if an argument passed in is a prime number.
#$counter=0
declare -a primeArray

#Use a for loop to call the prime function on every number in arr
#If the number is prime, add it to the primeArr, increment counter, and increase sum

isPrime(){
num=$1

echo "$num"

if [ num == 1 ] 
then
	echo "0"
fi
for (( i=2; i<=50; i++ ))
do 
	if [ num%i == 0 ]
	then
		echo "0"
	fi
done 

echo "1"
}


# Use a for loop to call the isPrime function with every element of the array passed as
# an argument. If the number passed is a prime number, find the summation.
#$sum=0
#for (( i=0; i<50; i++ ))
#do
#	isPrime ${arr[i]}
#	temp=$? #holds the boolean result of the isPrime function
#	if [ $temp -eq 1 ] # If the isPrime function returned true, add it to sum
#	then
#		${primeArray[$((counter))]}=$i # add i to the primeArray[counter]
#		let $sum+=$temp  # increase the sum
#		let $counter+=1   # increment the counter, keeps primeArray index
#	fi
#done


sum=0

## for loop with nested if statement
for (( i=1; i<51; i++ ))
do
	isPrime $i
	temp=$?
	echo "$temp"
done











